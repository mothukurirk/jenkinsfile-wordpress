AWSTemplateFormatVersion: '2010-09-09'
Description: >
  AWS CloudFormation Sample Template WordPress_Single_Instance:
  WordPress is web software you can use to create a beautiful website or blog.
  This template installs WordPress with a local MySQL database for storage.
  It demonstrates using the AWS CloudFormation bootstrap scripts to deploy WordPress.
  **WARNING**: This template creates an Amazon EC2 instance. You will be billed for
  the AWS resources used if you create a stack from this template.

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access
    Type: AWS::EC2::KeyPair::my-key-pair
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.micro
    AllowedValues:
      - t1.micro
      - t2.micro
      - t3.micro
      - t3.small
      - t3.medium
    ConstraintDescription: must be a valid EC2 instance type.

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.

Mappings:
  AWSInstanceType2Arch:
    t1.micro: { Arch: HVM64 }
    t2.micro: { Arch: HVM64 }
    t3.micro: { Arch: HVM64 }
    t3.small: { Arch: HVM64 }
    t3.medium: { Arch: HVM64 }

  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-08c40ec9ead489470
    us-west-2:
      HVM64: ami-00c39f71452c08778
    eu-west-1:
      HVM64: ami-047bb4163c506cd98

Resources:
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP and SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  WebServerInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
              php: []
              mysql: []
              mysql-server: []
              php-mysql: []
              wget: []
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
              mysqld:
                enabled: true
                ensureRunning: true
          commands:
            setup_wordpress:
              command: |
                cd /var/www/html
                wget https://wordpress.org/latest.tar.gz
                tar -xzf latest.tar.gz
                cp -r wordpress/* .
                rm -rf wordpress latest.tar.gz
                chown -R apache:apache /var/www/html
                systemctl restart httpd
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroups: [!Ref WebServerSecurityGroup]
      KeyName: !Ref my-key-pair
      ImageId: !FindInMap [AWSRegionArch2AMI, !Ref "AWS::Region", !FindInMap [AWSInstanceType2Arch, !Ref InstanceType, Arch]]
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum update -y
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServerInstance --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServerInstance --region ${AWS::Region}

Outputs:
  WebsiteURL:
    Description: WordPress Website URL
    Value: !Sub "http://${WebServerInstance.PublicDnsName}/"
